# XRTK Azure Pipelines build configuration

resources:
  repositories:
    - repository: pipeline_repo
      type: github
      name: XRTK/AzurePipelines
      endpoint: XRTK

variables:
  project.name: 'XRTK.Test'
  project.upmSha: ''
  package.name: 'com.xrtk.test'
  package.version: ''
  EditorPath: ''
  LogDirectory: ''
  ${{ if eq( variables['build.reason'], 'PullRequest' ) }}:
    date: ''
  ${{ if ne( variables['build.reason'], 'PullRequest' ) }}:
    date: ${{ '$(Date:yyyyMMdd)' }}
  isReleaseBuild: $[ and( eq(variables['Build.SourceBranchName'], 'main'), or( eq(variables['build.reason'], 'BatchedCI'), eq(variables['build.reason'], 'Manual') ) ) ]
  isPreviewBuild: $[ and( eq(variables['System.PullRequest.TargetBranch'], 'main'), eq(variables['build.reason'], 'PullRequest') ) ]

name: ${{ coalesce( variables['package.name'], variables['project.name'] ) }} ${{ coalesce( variables['date'], '$(System.PullRequest.PullRequestNumber)', '$(Date:yyyyMMdd)' ) }}$(Rev:.r)

pr:
  autoCancel: true
  branches:
   include:
     - main
     - development
     - feature/*
  paths:
    include:
    - azure-pipelines.yml
    - XRTK.Test/*
    - Submodules/*
    exclude:
      - '*'
      - XRTK.Test/Packages/com.xrtk.test/package.json
      - XRTK.Test/Packages/com.xrtk.test/README.md
      - XRTK.Test/Packages/com.xrtk.test/LICENSE.md

trigger:
  batch: true
  branches:
    include:
      - main
  paths:
    include:
      - azure-pipelines.yml
      - XRTK.Test/*
      - Submodules/*
    exclude:
      - '*'
      - XRTK.Test/Packages/com.xrtk.test/package.json
      - XRTK.Test/Packages/com.xrtk.test/README.md
      - XRTK.Test/Packages/com.xrtk.test/LICENSE.md

extends:
  template: common.yml@pipeline_repo
  parameters:
    # Unity -buildTarget command line args https://docs.unity3d.com/Manual/CommandLineArguments.html
    # StandaloneWindows64, WSAPlayer, StandaloneOSX, iOS, StandaloneLinux64, Android, WebGL, Lumin
    # TODO: Only use XRTK defined platform targets for build
    targets:
      - StandaloneWindows64
      - WSAPlayer
      - StandaloneOSX
      - StandaloneLinux64
      - Android
      - WebGL
